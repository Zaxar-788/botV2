#!/usr/bin/env python3
"""
üß™ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

print("üöÄ –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ MEXC BOT")
print("="*50)

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
try:
    from src.main import MexcAnalysisBot
    from src.data.database import SignalsManager
    print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
try:
    manager = SignalsManager()
    stats = manager.database.get_statistics()
    print(f"‚úÖ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞, —Å–∏–≥–Ω–∞–ª–æ–≤: {stats.get('total_signals', 0)}")
    manager.close()
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞
print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞...")
try:
    bot = MexcAnalysisBot()
    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏...")
docs_files = ["docs/DOCUMENTATION.md", "docs/DEVELOPMENT.md", "README.md"]
for file_path in docs_files:
    if os.path.exists(file_path):
        size = os.path.getsize(file_path)
        print(f"‚úÖ {file_path} ({size:,} –±–∞–π—Ç)")
    else:
        print(f"‚ùå {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")

print("\n" + "="*50)
print("üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
print("   - docs/DOCUMENTATION.md - —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
print("   - docs/DEVELOPMENT.md - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
