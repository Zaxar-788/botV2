
#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–∞—Ä
"""

import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.data.pairs_fetcher import MexcPairsFetcher

def test_filtering():
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–∞—Ä"""
    
    print("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –§–ò–õ–¨–¢–†–ê–¶–ò–ò")
    print("=" * 40)
    
    fetcher = MexcPairsFetcher()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–∞—Ä—ã
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä...")
    pairs = fetcher.get_all_pairs(force_update=True)
    print(f"   –í—Å–µ–≥–æ –ø–∞—Ä: {len(pairs)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫—ç—à –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω
    print(f"   –ö—ç—à –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {len(fetcher._pairs_info_cache)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    
    if len(fetcher._pairs_info_cache) == 0:
        print("‚ùå –ö—ç—à –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—É—Å—Ç!")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ä–∞—Ö
    print("\n2. –ü—Ä–∏–º–µ—Ä—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ä–∞—Ö:")
    sample_pairs = list(fetcher._pairs_info_cache.keys())[:5]
    
    for symbol in sample_pairs:
        info = fetcher._pairs_info_cache[symbol]
        print(f"   {symbol}: {info.base_coin}/{info.quote_coin}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
    
    usdt_pairs = fetcher.get_pairs_by_quote_coin('USDT')
    print(f"   USDT –ø–∞—Ä—ã: {len(usdt_pairs)}")
    if usdt_pairs:
        print(f"   –ü—Ä–∏–º–µ—Ä—ã: {usdt_pairs[:5]}")
    
    usd_pairs = fetcher.get_pairs_by_quote_coin('USD')
    print(f"   USD –ø–∞—Ä—ã: {len(usd_pairs)}")
    if usd_pairs:
        print(f"   –ü—Ä–∏–º–µ—Ä—ã: {usd_pairs[:3]}")
    
    btc_pairs = fetcher.get_pairs_by_quote_coin('BTC')
    print(f"   BTC –ø–∞—Ä—ã: {len(btc_pairs)}")
    if btc_pairs:
        print(f"   –ü—Ä–∏–º–µ—Ä—ã: {btc_pairs[:3]}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –≤–∞–ª—é—Ç—ã
    btc_base = fetcher.get_pairs_by_base_coin('BTC')
    print(f"   BTC –±–∞–∑–æ–≤—ã–µ: {len(btc_base)}")
    if btc_base:
        print(f"   –ü—Ä–∏–º–µ—Ä—ã: {btc_base[:3]}")
    
    eth_base = fetcher.get_pairs_by_base_coin('ETH')
    print(f"   ETH –±–∞–∑–æ–≤—ã–µ: {len(eth_base)}")
    if eth_base:
        print(f"   –ü—Ä–∏–º–µ—Ä—ã: {eth_base[:3]}")

if __name__ == "__main__":
    test_filtering()
