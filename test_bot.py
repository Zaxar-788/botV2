#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–æ—Ç–∞

–≠—Ç–æ—Ç —Ñ–∞–π–ª –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:
python test_bot.py
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.utils.logger import setup_main_logger
from src.data.rest_client import MexcRestClient
from src.signals.detector import VolumeSpikeDetector
from src.telegram.bot import TelegramNotifier
from src.config import TRADING_PAIR

def test_components():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ü–û–ù–ï–ù–¢–û–í –ë–û–¢–ê")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_main_logger()
    
    # –¢–µ—Å—Ç 1: REST –∫–ª–∏–µ–Ω—Ç
    print("\nüìä –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å MEXC...")
    rest_client = MexcRestClient()
    klines = rest_client.get_klines(pair=TRADING_PAIR, limit=10)
    
    if klines:
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(klines)} —Å–≤–µ—á–µ–π")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–≤–µ—á–∞: —Ü–µ–Ω–∞ ${float(klines[-1]['c']):.2f}, –æ–±—ä—ë–º {float(klines[-1]['q']):.0f}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return False
      # –¢–µ—Å—Ç 2: –î–µ—Ç–µ–∫—Ç–æ—Ä —Å–ø–∞–π–∫–æ–≤
    print("\nüîç –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑ —Å–ø–∞–π–∫–æ–≤ –æ–±—ä—ë–º–∞...")
    detector = VolumeSpikeDetector(threshold=1.5, window_size=5)  # –£–º–µ–Ω—å—à–∞–µ–º –æ–∫–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    signal = detector.analyze_volume_spike(klines, TRADING_PAIR)
    
    if signal:
        print(f"‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å–ø–∞–π–∫: {signal.spike_ratio:.1f}x –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ")
        print(f"   {signal.message}")
    else:
        print("‚ÑπÔ∏è –°–ø–∞–π–∫–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
    
    # –¢–µ—Å—Ç 3: Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("\nüì§ –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    notifier = TelegramNotifier()
    
    if signal:
        success = notifier.send_volume_signal(signal)
    else:
        # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª
        from src.signals.detector import VolumeSignal
        test_signal = VolumeSignal(
            timestamp=1640995200000,
            pair=TRADING_PAIR,
            current_volume=1000000,
            average_volume=500000,
            spike_ratio=2.0,
            price=50000.0,
            message="üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∏–≥–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
        )
        success = notifier.send_volume_signal(test_signal)
    
    if success:
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("   –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("   –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: python src/main.py")
    
    return True

if __name__ == "__main__":
    test_components()
