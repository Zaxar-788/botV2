#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –º–æ–¥—É–ª—è pairs_fetcher
"""

import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞–ø—Ä—è–º—É—é
from src.data.pairs_fetcher_fixed import MexcPairsFetcher, PairInfo

def test_fixed_pairs_fetcher():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –º–æ–¥—É–ª—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ pairs_fetcher")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º fetcher
    fetcher = MexcPairsFetcher()
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä
    print("\nüìä –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä")
    start_time = time.time()
    pairs = fetcher.get_all_pairs()
    end_time = time.time()
    
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(pairs)} —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä –∑–∞ {end_time - start_time:.2f} —Å–µ–∫")
    if len(pairs) > 0:
        print(f"   –ü—Ä–∏–º–µ—Ä –ø–∞—Ä: {pairs[:5]}")
    
    # –¢–µ—Å—Ç 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ USDT
    print("\nüí∞ –¢–µ—Å—Ç 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä USDT")
    start_time = time.time()
    usdt_pairs = fetcher.get_pairs_by_quote_coin("USDT")
    end_time = time.time()
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(usdt_pairs)} –ø–∞—Ä USDT –∑–∞ {end_time - start_time:.3f} —Å–µ–∫")
    if len(usdt_pairs) > 0:
        print(f"   –ü—Ä–∏–º–µ—Ä USDT –ø–∞—Ä: {usdt_pairs[:5]}")
    
    # –¢–µ—Å—Ç 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ BTC
    print("\nüü† –¢–µ—Å—Ç 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä —Å –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–æ–π BTC")
    start_time = time.time()
    btc_pairs = fetcher.get_pairs_by_base_coin("BTC")
    end_time = time.time()
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(btc_pairs)} –ø–∞—Ä BTC –∑–∞ {end_time - start_time:.3f} —Å–µ–∫")
    if len(btc_pairs) > 0:
        print(f"   –ü—Ä–∏–º–µ—Ä BTC –ø–∞—Ä: {btc_pairs[:3]}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∞—Ä–µ
    print("\nüîç –¢–µ—Å—Ç 4: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∞—Ä–µ")
    if len(pairs) > 0:
        test_symbol = pairs[0]
        start_time = time.time()
        pair_info = fetcher.get_pair_info(test_symbol)
        end_time = time.time()
        
        if pair_info:
            print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {test_symbol} –ø–æ–ª—É—á–µ–Ω–∞ –∑–∞ {end_time - start_time:.3f} —Å–µ–∫")
            print(f"   –°–∏–º–≤–æ–ª: {pair_info.symbol}")
            print(f"   –ë–∞–∑–æ–≤–∞—è: {pair_info.base_coin}")
            print(f"   –ö–æ—Ç–∏—Ä–æ–≤–∫–∞: {pair_info.quote_coin}")
            print(f"   –ú–∞–∫—Å. –ø–ª–µ—á–æ: {pair_info.max_leverage}")
            print(f"   –ú–∏–Ω. —Ä–∞–∑–º–µ—Ä: {pair_info.min_vol}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ {test_symbol}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\n‚ö° –¢–µ—Å—Ç 5: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è")
    start_time = time.time()
    pairs_cached = fetcher.get_all_pairs()
    end_time = time.time()
    cached_time = end_time - start_time
    
    print(f"‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {len(pairs_cached)} –ø–∞—Ä –∑–∞ {cached_time:.6f} —Å–µ–∫")
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 60)
    print("üìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("=" * 60)
    print(f"üéØ –í—Å–µ–≥–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä: {len(pairs)}")
    print(f"üí∞ –ü–∞—Ä—ã USDT: {len(usdt_pairs)}")
    print(f"üü† –ü–∞—Ä—ã BTC: {len(btc_pairs)}")
    print(f"‚ö° –í—Ä–µ–º—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {cached_time:.6f} —Å–µ–∫")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç
    assert len(pairs) > 700, f"–û–∂–∏–¥–∞–ª–∏ > 700 –ø–∞—Ä, –ø–æ–ª—É—á–∏–ª–∏ {len(pairs)}"
    assert len(usdt_pairs) > 100, f"–û–∂–∏–¥–∞–ª–∏ > 100 –ø–∞—Ä USDT, –ø–æ–ª—É—á–∏–ª–∏ {len(usdt_pairs)}"
    assert cached_time < 0.01, f"–ö—ç—à –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±—ã—Å—Ç—Ä–µ–µ 0.01 —Å–µ–∫, –ø–æ–ª—É—á–∏–ª–∏ {cached_time:.6f}"
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    try:
        test_fixed_pairs_fetcher()
        print("\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –º–æ–¥—É–ª—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
