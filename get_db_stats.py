#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from src.data.database import SignalsManager
from src.config import DATABASE_CONFIG, CACHE_CONFIG

def main():
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    sm = SignalsManager(DATABASE_CONFIG, CACHE_CONFIG)
    
    try:        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = sm.database.get_statistics()
        
        print(f"üíæ –í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –ë–î: {stats['total_signals']}")
        print()
        
        print("üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–æ—Ä–≥–æ–≤—ã–º –ø–∞—Ä–∞–º:")
        for pair, count in stats['by_pairs'].items():
            print(f"   {pair}: {count} —Å–∏–≥–Ω–∞–ª–æ–≤")
        print()
        
        print("‚è∞ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º:")
        for timeframe, count in stats['by_timeframes'].items():
            print(f"   {timeframe}: {count} —Å–∏–≥–Ω–∞–ª–æ–≤")
        print()        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—ç—à–µ
        cache_info = sm.cache.get_cache_stats()
        print(f"üóÇÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫—ç—à–∞: {cache_info['buffer_size']}/{cache_info['max_buffer_size']} —Å–∏–≥–Ω–∞–ª–æ–≤")
        
        print()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
    finally:
        sm.close()

if __name__ == "__main__":
    main()
