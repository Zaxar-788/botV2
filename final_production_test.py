#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
"""

import asyncio
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from src.utils.logger import setup_main_logger
from src.main import AsyncMexcAnalysisBot

async def main():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏"""
    logger = setup_main_logger()
    
    logger.info("üéØ === –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–°–¢–í–ï–ù–ù–û–ô –ì–û–¢–û–í–ù–û–°–¢–ò ===")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        bot = AsyncMexcAnalysisBot(
            timeframes=['Min1', 'Min5', 'Min15', 'Min60'],
            analysis_interval=60,
            pairs_update_interval=3600,
            enable_websocket=True
        )
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebSocket
        await bot._init_websocket_client()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã
        pairs = await bot.get_dynamic_pairs()
        
        logger.info(f"üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–ò–ó–í–û–î–°–¢–í–ï–ù–ù–û–ú–£ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!")
        logger.info(f"üìä –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {len(pairs)} —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä")
        logger.info(f"üåê WebSocket –∫–ª–∏–µ–Ω—Ç: {'‚úÖ –ê–ö–¢–ò–í–ï–ù' if bot.ws_client else '‚ùå –ù–ï –ê–ö–¢–ò–í–ï–ù'}")
        logger.info(f"‚è∞ –¢–∞–π–º—Ñ—Ä–µ–π–º—ã: {', '.join(bot.timeframes)}")
        logger.info(f"üîÑ –ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–Ω–∞–ª–∏–∑–∞: {bot.analysis_interval}—Å")
        logger.info(f"üì° Dual-mode –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: REST API + WebSocket real-time")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Ç–µ—Å—Ç–µ: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)
